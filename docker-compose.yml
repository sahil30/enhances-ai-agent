version: '3.8'

services:
  ai-agent:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai-agent-container
    ports:
      - "8000:8000"
      - "9090:9090"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # For mcp-atlassian integration
      - ./cache:/app/cache
      - ./logs:/app/logs
      - ./data:/app/data
      - ./.env:/app/.env
    environment:
      - LOG_LEVEL=INFO
      - ENABLE_METRICS=true
      - PYTHONPATH=/app/ai_agent
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - ai-agent-network

  # Optional: Redis for caching
  redis:
    image: redis:7-alpine
    container_name: ai-agent-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - ai-agent-network

  # Optional: Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: ai-agent-prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - ai-agent-network

networks:
  ai-agent-network:
    driver: bridge

volumes:
  redis_data:
  prometheus_data:
